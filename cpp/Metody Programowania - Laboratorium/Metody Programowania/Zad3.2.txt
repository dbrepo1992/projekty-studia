punkt p(2, 3);
  cout << p.x() << ' ' << p.y() << '\n';
  p.x() = 1;
  p.y() = 1;
  cout << p.x() << ' ' << p.y() << '\n';
  cout << p.odleglosc(punkt()) << "\n\n";
  const punkt t[] = { punkt(0, 0), punkt(0, 1), punkt(1, 1), punkt(1, 0) };
  for(size_t i=0; i < sizeof(t)/sizeof(punkt); ++i)
    cout << i+1 << ")  " << t[i] << endl;

  cout << "\n*****\n";
  wielobok w1(t, t+4);
  cout << w1.obwod() << '\n';

  w1[1] = punkt(0.5, 0.5);
  cout << w1.obwod() << '\n';
  cout << "***\n\n";  
 

  wielobok w2;
  w2 = wielobok(t, t+3);
  cout << w2.obwod() << '\n';

  for (size_t i = 0; i < w2.ilosc(); ++i)
    cout << w2[i].x() << ' ' << w2[i].y() << '\n';

  cout << "\n*****\n";
  wielobok w3(w2);
  w3[1] = punkt(0, -1);
  w3[2] = punkt(-1, -1);
  for (size_t i = 0; i < w3.ilosc(); ++i)
    cout << w3[i] << endl;
  cout << "***\n\n";

  cout << "\n*****\n";
  cout << w2 << "***\n" << w3;
  cout << "*****\n\n";

  cout << w2.obwod() - w3.obwod() << "\n\n";
